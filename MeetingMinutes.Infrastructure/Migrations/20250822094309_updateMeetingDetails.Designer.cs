// <auto-generated />
using System;
using MeetingMinutes.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeetingMinutes.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250822094309_updateMeetingDetails")]
    partial class updateMeetingDetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeetingMinutes.Domain.Entities.CorporateCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.ToTable("Corporate_Customer_Tbl", (string)null);
                });

            modelBuilder.Entity("MeetingMinutes.Domain.Entities.IndividualCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.ToTable("Individual_Customer_Tbl", (string)null);
                });

            modelBuilder.Entity("MeetingMinutes.Domain.Entities.MeetingMinutesDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MeetingMinutesMasterId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Unit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("MeetingMinutesMasterId");

                    b.HasIndex("ProductId");

                    b.ToTable("Meeting_Minutes_Details_Tbl", (string)null);
                });

            modelBuilder.Entity("MeetingMinutes.Domain.Entities.MeetingMinutesMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendClientSide")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AttendHostSide")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("CorporateCustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("MeetingAgenda")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("MeetingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingDecision")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MeetingDiscussion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MeetingPlace")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CorporateCustomerId");

                    b.HasIndex("Id");

                    b.HasIndex("IndividualCustomerId");

                    b.ToTable("Meeting_Minutes_Master_Tbl", (string)null);
                });

            modelBuilder.Entity("MeetingMinutes.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Unit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.ToTable("Products_Service_Tbl", (string)null);
                });

            modelBuilder.Entity("MeetingMinutes.Domain.Entities.MeetingMinutesDetails", b =>
                {
                    b.HasOne("MeetingMinutes.Domain.Entities.MeetingMinutesMaster", "MeetingMinutesMaster")
                        .WithMany()
                        .HasForeignKey("MeetingMinutesMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeetingMinutes.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeetingMinutesMaster");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MeetingMinutes.Domain.Entities.MeetingMinutesMaster", b =>
                {
                    b.HasOne("MeetingMinutes.Domain.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany()
                        .HasForeignKey("CorporateCustomerId");

                    b.HasOne("MeetingMinutes.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany()
                        .HasForeignKey("IndividualCustomerId");

                    b.Navigation("CorporateCustomer");

                    b.Navigation("IndividualCustomer");
                });
#pragma warning restore 612, 618
        }
    }
}
